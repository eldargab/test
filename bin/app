#!/usr/bin/env node

'use strict'

const program = require('commander')
const go = require('go-async')
const proc = require('../lib/processes')

function nat(val) {
  let i = parseInt(val, 10)
  if (isNaN(i)) throw new Error('Not a number: ' + val)
  if (i < 0) throw new Error('Not a natural number')
  return i
}

program.option('-e, --getErrors', 'Print and clear the error registry')
program.option('-p, --performance', 'Measure system performance')
program.option('-w, --worker', 'Run a worker process')
program.option('-r, --rate <msgs/sec>', 'Number of messages per second generator should yield (default 5)', nat)
program.option('-d, --delay <ms>', 'Simulate message processing time for worker (default 500)', nat)
program.rate = 5
program.delay = 500

program.parse(process.argv)

process.options = program

function run(p) {
  go(p).get(function(err) {
    if (err) console.error(err.stack)
    process.exit(err ? 1 : 0)
  })
}

if (program.getErrors) {
  run(proc.errorsDumper)
} else if (program.performance) {
  run(proc.performance)
} else if (program.worker) {
  run(proc.worker)
} else {
  run(proc.generator)
}
